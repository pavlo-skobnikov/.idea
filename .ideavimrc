" -> https://github.com/JetBrains/ideavim/wiki

"" BASIC CONFIGURATION ""

" <SPACE> as the leader key.
" NOTE: Needs to be defined early.
let mapleader = " "

" Use Intellij's line joining behaviour.
set ideajoin

" Show Current Vim Mode.
set showmode

" Search as characters are entered.
set incsearch

" Highlight search results.
set hlsearch

" Case-sensitive search only on present upper letters.
set smartcase

" Relative numbers only club.
set relativenumber

" Keep the current mode when triggering refactoring actions.
set idearefactormode=keep

"" PLUGINS ""

" Vim movement in the file explorer.
" -> https://github.com/JetBrains/ideavim/wiki/NERDTree-support
Plug 'preservim/nerdtree'

" Operate on matching characters:
" - ys => Add.
" - cs => Change.
" - ds => Delete.
" -> https://github.com/tpope/vim-surround/blob/master/doc/surround.txt
Plug 'tpope/vim-surround'

" Easily comment w/ `gc...`.
Plug 'tpope/vim-commentary'

" [count]/{Visual} + REGISTER + gr = Replace from register.
Plug 'vim-scripts/ReplaceWithRegister'

" Add text object for arguments: a-/ia (around/inside argument).
Plug 'vim-scripts/argtextobj.vim'

" Exchange text objects with `cx...`.
Plug 'tommcdo/vim-exchange'

" Add the entire buffer text object: a-/ie (around/inside the (entire) buffer contents).
Plug 'kana/vim-textobj-entire'

" Highlights what has just been yanked.
Plug 'machakann/vim-highlightedyank'

" Improvements to `{` and `}` motions to include blank lines as well.
Plug 'dbakker/vim-paragraph-motion'

" Adds and indentation level object: a-/ii (around/inside indentation level).
Plug 'michaeljsmith/vim-indent-object'

" Explain mappings on the fly.
set which-key

" Don't wait to show the key mappings.
set notimeout

"" Mappings.

" Remove highlights on <ESC>
nnoremap <esc> :noh<CR>

" Easy window navigation
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" File explorer.
nnoremap - :action SelectInProjectView<CR>

" Center screen on movement.
nnoremap <C-d> <C-d>zz
nnoremap <C-u> <C-u>zz

"" [] navigation.
nnoremap [f :action MethodUp<CR>
nnoremap ]f :action MethodDown<CR>

nnoremap ]d :action GotoNextError<CR>
nnoremap [d :action GotoPreviousError<CR>

nnoremap ]c :action VcsShowNextChangeMarker<CR>
nnoremap [c :action VcsShowPrevChangeMarker<CR>

nnoremap ]q :action NextOccurence<CR>
nnoremap [q :action PreviousOccurence<CR>

" Increase/decrease selection.
vnoremap ; :action EditorSelectWord<CR>
vnoremap , :action EditorUnSelectWord<CR>

" Replace multiple successive whitespaces with a single space.
nnoremap d<SPACE> f<SPACE>diwi<SPACE><ESC>
nnoremap c<SPACE> f<SPACE>diwi<SPACE>

" Commenting.
nnoremap gb :action CommentByBlockComment<CR>
vnoremap gb :action CommentByBlockComment<CR>

nnoremap gc :action CommentByLineComment<CR>
vnoremap gc :action CommentByLineComment<CR>

" LSP information.
nnoremap K :action QuickJavaDoc<CR>
vnoremap K :action QuickJavaDoc<CR>

nnoremap T :action ExpressionTypeInfo<CR>
vnoremap T :action ExpressionTypeInfo<CR>

nnoremap <C-S-k> :action ParameterInfo<CR>
vnoremap <C-S-k> :action ParameterInfo<CR>
inoremap <C-S-k> :action ParameterInfo<CR>

" Trigger Ataman.
nnoremap <LEADER> :action LeaderAction<CR>
vnoremap <LEADER> :action LeaderAction<CR>
