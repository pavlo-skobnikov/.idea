# This file is written in HOCON (Human-Optimized Config Object Notation) format.
#   - https://github.com/lightbend/config/blob/master/HOCON.md
#
# The order of the mappings follows two basic principles:
#   - Single-action mappings are above nested multi-action mappings.
#   - Mappings are sorted via the default `:sort` Vim command inside of their groups.
#
# The mappings are grouped semantically according to their main functionality. The
#   configuration below should be self-explanatory.
#
# NOTE: The mappings here _vaguely_ follow my Neovim mappings, however, they are not
#   1:1. Why? Because keeping the same mappings in both editors is an exercise in
#   vanity and procrastination. Neovim is an extensible editor, and IntelliJ IDEA is
#   an IDE. They have different use cases and functionalities.

bindings {
  c { actionId: copilot.chat.show, description: Copilot chat }
  u { actionId: LocalHistory.ShowHistory, description: Undo file history }
  T { actionId: ActivateTerminalToolWindow, description: Open terminal }
  b {
    description: "+bookmarks"
    bindings {
      b { actionId: ActivateBookmarksToolWindow, description: Bookmarks and breakpoints }
      m { actionId: ToggleBookmarkWithMnemonic, description: Create mnemonic bookmark }
      t { actionId: ToggleBookmark, description: Toggle bookmark }
    }
  }
  B {
    description: "+build"
    bindings {
      b { actionId: ActivateBuildToolWindow, description: Build }
      c { actionId: MakeModule, description: Compile Current Module }
      p { actionId: ActivatePackageSearchToolWindow, description: Packages }
      r { actionId: CompileProject, description: Rebuild project }
      g {
        description: "+gradle"
        bindings {
          e { actionId: Gradle.ExecuteTask, description: Execute task }
          g { actionId: ActivateGradleToolWindow, description: Gradle tool window }
          r { actionId: ExternalSystem.RefreshAllProjects, description: Reload all projects }
        }
      }
      m {
        description: "+maven"
        bindings {
          e { actionId: Maven.ExecuteGoal, description: Execute goal }
          m { actionId: ActivateMavenToolWindow, description: Maven tool window }
          r { actionId: Maven.Reimport, description: Reload all projects }
        }
      }
    }
  }
  d {
    description: "+debug"
    bindings {
      c { actionId: Debugger.RemoveAllBreakpointsInFile, description: Clear all breakpoints }
      d { actionId: ActivateDebugToolWindow, description: Debug Tool Window }
      o { actionId: KotlinConsoleREPL, description: Open Kotlin REPL }
      b {
        description: "+breakpoints"
        bindings {
          a { actionId: ToggleBreakpointAction, description: Toggle action }
          b { actionId: ToggleLineBreakpoint, description: Toggle simple }
          e { actionId: ToggleBreakpointEnabled, description: Toggle enabled }
          f { actionId: ToggleFieldBreakpoint, description: Toggle field }
          m { actionId: ToggleMethodBreakpoint, description: Toggle method }
          v { actionId: ViewBreakpoints, description: View all }
        }
      }
      r {
        description: "+run"
        bindings {
          c { actionId: DebugClass, description: Class }
          d { actionId: Debug, description: Debug }
          f { actionId: ChooseDebugConfiguration, description: Find configuration }
          r { actionId: Resume, description: Resume }
        }
      }
      s {
        description: "+step"
        bindings {
          c { actionId: RunToCursor, description: To cursor }
          i { actionId: StepInto, description: Into }
          n { actionId: StepOver, description: Over }
          o { actionId: StepOut, description: Out }
        }
      }
    }
  }
  e {
    description: "+extra-tools"
    bindings {
      c { actionId: ActivateCoverageToolWindow, description: Coverage }
      d { actionId: ActivateDatabaseToolWindow, description: Database }
      e { actionId: ActivateEndpointsToolWindow, description: Endpoints }
      p { actionId: ActivatePersistenceToolWindow, description: Persistence }
      P { actionId: ActivateProfilerToolWindow, description: Profiler }
      s { actionId: ActivateServicesToolWindow, description: Services }
    }
  }
  f {
    description: "+find"
    bindings {
      a { actionId: SearchEverywhere, description: All }
      c { actionId: RecentChangedFiles, description: Recently changed files }
      f { actionId: GotoFile, description: Go To File }
      g { actionId: FindInPath, description: grep }
      h { actionId: RecentFiles, description: Opened files history }
      l { actionId: RecentLocations, description: Recent locations }
      x { actionId: GotoAction, description: Command and execute }
    }
  }
  g {
    description: "+git"
    bindings {
      b { actionId: Annotate, description: Blame }
      B { actionId: Git.Branches, description: Branches }
      c { actionId: Vcs.Show.Log, description: Commit Log }
      C { actionId: Vcs.ShowTabbedFileHistory, description: Buffer commits }
      d { actionId: ShowBlankDiffWindow, description: Open diff window }
      g { actionId: Vcs.Show.Local.Changes, description: Git }
      G {
        description: "+github"
        bindings {
          c { actionId: Github.Create.Pull.Request, description: Create pull request }
          o { actionId: Github.Open.In.Browser, description: Open on github }
          v { actionId: Github.View.Pull.Request, description: View pull requests }
        }
      }
      h {
        description: "+hunk"
        bindings {
          a { actionId: Git.Stage.Add.Tracked, description: Stage all tracked files }
          r { actionId: ChangesView.Revert, description: Revert selection }
          u { actionId: Vcs.RollbackChangedLines, description: Revert hunk }
        }
      }
      r {
        description: "+remote"
        bindings {
          f { actionId: Git.Fetch, description: Fetch }
          m { actionId: Git.Configure.Remotes, description: Manage remotes }
          p { actionId: Vcs.Push, description: Push }
          P { actionId: Git.Pull, description: Pull }
          r { actionId: Git.Rebase, description: Rebase }
          u { actionId: Vcs.UpdateProject, description: Update project }
        }
      }
      s {
        description: "+stash"
        bindings {
          s { actionId: Git.Stash, description: Stash }
          S { actionId: Git.Show.Stash, description: Show stash }
          u { actionId: Git.Unstash, description: Unstash }
        }
      }
    }
  }
  h {
    description: "+harpoon"
    bindings {
      l { actionId: ShowHarpoon, description: List }
      a { actionId: AddToHarpoon, description: Add }
      1 { actionId: GotoHarpoon1, description: Go to 1 }
      2 { actionId: GotoHarpoon2, description: Go to 2 }
      3 { actionId: GotoHarpoon3, description: Go to 3 }
      4 { actionId: GotoHarpoon4, description: Go to 4 }
      5 { actionId: GotoHarpoon5, description: Go to 5 }
    }
  }
  H {
    description: "+help"
    bindings {
      m { actionId: performancePlugin.ShowMemoryDialogAction, description: Change memory settings }
      o { actionId: OpenAtamanConfigAction, description: Open ~/.atamanrc.config }
      a { actionId: ReloadAtamanConfigAction, description: Reload Ataman configuration }
      v { actionId: IdeaVim.ReloadVimRc.reload, description: Reload IdeaVim configuration }
      s { actionId: ShowSettings, description: Settings }
    }
  }
  l {
    description: "+lsp"
    bindings {
      a { actionId: Refactorings.QuickListPopupAction, description: Actions }
      l { actionId: ShowIntentionActions, description: Code lens }
      r { actionId: RenameElement, description: Rename }
      h { actionId: HighlightUsagesInFile, description: Highlight usages }
      d { actionId: ShowErrorDescription, description: Show error description }
      o { actionId: OptimizeImports, description: Optimize imports }
      f { actionId: ReformatCode, description: Format code }
      t {
        description: "+tools"
        bindings {
          i { actionId: InspectCode, description: Inspection code }
          p { actionId: ActivateProblemsViewToolWindow, description: Problems view }
          h { actionId: HierarchyGroup, description: Hierarchy }
        }
      }
      s {
        description: "+symbols"
        bindings {
          d { actionId: FileStructurePopup, description: Document symbols }
          w { actionId: GotoSymbol, description: Workspace symbols}
          c { actionId: GotoClass, description: Class symbols }
        }
      }
      g {
        description: "+goto"
        bindings {
          r { actionId: ShowUsages, description: References }
          s { actionId: GotoSuperMethod, description: Super method }
          d { actionId: GotoDeclaration, description: Definition }
          t { actionId: GotoTypeDeclaration, description: Type definition }
          i { actionId: GotoImplementation, description: Implementation }
        }
      }
    }
  }
  p {
    description: "+project"
    bindings {
      i { actionId: ImportProject, description: Import }
      k { actionId: CloseProject, description: Close }
      n { actionId: NewProject, description: New }
      r { actionId: ManageRecentProjects, description: Recent projects }
    }
  }
  r {
    description: "+run"
    bindings {
      a { actionId: RunAnything, description: Run anything }
      f { actionId: ChooseRunConfiguration, description: Find recent run configuration }
      l { actionId: Rerun, description: Rerun latest configuration }
      r { actionId: ActivateRunToolWindow, description: Run tool window }
      t { actionId: RerunTests, description: Rerun tests }
    }
  }
  s {
    description: "+search-and-replace"
    bindings {
      f { actionId: Replace, description: In file }
      p { actionId: ReplaceInPath, description: In path }
      s { actionId: StructuralSearchPlugin.StructuralReplaceAction, description: Structural replace }
    }
  }
  S {
    description: "+session"
    bindings {
      i { actionId: InvalidateCaches, description: Invalidate caches and restart }
      p { actionId: WelcomeScreen.Plugins, description: Plugins }
      q { actionId: Exit, description: Quit IntelliJ }
      r { actionId: RestartIde, description: Restart }
    }
  }
  t {
    description: "+toggle"
    bindings {
      a { actionId: VimFindActionIdAction, description: Action ID tracking }
      d { actionId: ToggleDistractionFreeMode, description: Distraction free mode }
      l { actionId: EditorToggleUseSoftWraps, description: Line soft wrapping }
      n { actionId: EditorToggleShowLineNumbers, description: Line numbers }
      p { actionId: TogglePresentationMode, description: Presentation mode }
      w { actionId: HideAllWindows, description: Show/Hide all windows }
      z { actionId: ToggleZenMode, description: Zen mode }
      t {
        description: "+text-editor-preview"
        bindings {
          b { actionId: TextEditorWithPreview.Layout.EditorAndPreview, description: Both editor and preview}
          e { actionId: TextEditorWithPreview.Layout.EditorOnly, description: Editor only}
          p { actionId: TextEditorWithPreview.Layout.PreviewOnly, description: Preview only}
        }
      }
    }
  }
  z {
    description: "+zoom"
    bindings {
      d { actionId: EditorIncreaseFontSize, description: Increase font size }
      i { actionId: EditorDecreaseFontSize, description: Decrease font size }
      r { actionId: EditorResetFontSize, description: Reset font size }
    }
  }
}
